/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionalumnos4;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;

/**
 *
 * @author eduar
 */
public class Interfaz extends javax.swing.JFrame {
        Gestion gestion = new Gestion();
        

    /**
     * Creates new form Interfaz
     */
    public Interfaz() throws IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        eliminarAlumno.setEnabled(false); // Bloqueamos el botón Eliminar, ya que no hay ningún alumno seleccionado
        modAlumno.setEnabled(false); // Bloqueamos el botón Modificar, ya que no se ha introducido ninguna modificación
        eliminarAsignatura.setEnabled(false); // Bloqueamos el botón de Eliminar Asignatura, ya que no se ha seleccionado ninguna
        modAsignatura.setEnabled(false); // Bloqueamos el botón de modificar Asignatura, ya que no se ha modificado ninguna
        evaluacionAlumno.setEnabled(false); // Impedimos que el usuario pueda introducir notas a "ningún" Alumno;
        comboBoxAsignaturas.setEnabled(false); // Impedimos que se seleccione una asignatura sin seleccionar antes un Alumno
        eliminarNota.setEnabled(false); // Impedimos eliminar notas si no hay notas
        evaluacionAlumno.setEnabled(false); // Impedimos guardar una nota mientras no se haya seleccionado el alumno
        
        DefaultListModel modeloVacio = new DefaultListModel();
        modeloVacio.addElement("");
        
        try{
            listaAlumnos.setModel(gestion.mostrarListaAlumnos()); // Añadimos el alumno a la jList de la interfaz. La funcion devuelve un modelo
        }catch(Exception e){
            listaAlumnos.setModel(modeloVacio);
        }
        
        try{
            listaGestionAsignaturas.setModel(gestion.mostrarListaAsignatura()); // Añadimos el alumno a la jList de la interfaz. La funcion devuelve un modelo
        }catch(Exception e){
            listaGestionAsignaturas.setModel(modeloVacio);
        }
        
        try{
            listaGestionAlumnos.setModel(gestion.mostrarListaAlumnos()); // Añadimos los alumnos a la lista de Gestion de Alumnos
        }catch(Exception e){
            listaGestionAlumnos.setModel(modeloVacio);
        }
        
        try{
            comboBoxAsignaturas.setModel(gestion.leerAsignatura());
        }catch(Exception e){
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            modelo.addElement("");
            comboBoxAsignaturas.setModel(modelo);
        }
        
        listaGestionNotas.setModel(modeloVacio);
        asignaturasResumen.setModel(modeloVacio);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAlumnos = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        resumenNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        resumenApe = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        asignaturasResumen = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        resumenDNI = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxAsignaturas = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        gestionAlumnoNota = new javax.swing.JTextField();
        evaluacionAlumno = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        gestionAlumnoConvo = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaGestionNotas = new javax.swing.JList<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        nombreAsig = new javax.swing.JTextField();
        nombreConvo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        nombreNota = new javax.swing.JTextField();
        eliminarNota = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        addAlumnoNombre = new javax.swing.JTextField();
        addAlumnoApe = new javax.swing.JTextField();
        addAlumnoDNI = new javax.swing.JTextField();
        addObjetoAlumno = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        gestionApe = new javax.swing.JTextField();
        gestionDNI = new javax.swing.JTextField();
        eliminarAlumno = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaGestionAlumnos = new javax.swing.JList<>();
        modAlumno = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        gestionNombre = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaGestionAsignaturas = new javax.swing.JList<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        gestionAsig = new javax.swing.JTextField();
        gestionCurso = new javax.swing.JTextField();
        eliminarAsignatura = new javax.swing.JButton();
        modAsignatura = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        AddObjectoAsig = new javax.swing.JButton();
        cursoAsignatura = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nomAsignatura = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        listaAlumnos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaAlumnos);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen:"));

        jLabel1.setText("Nombre:");

        resumenNombre.setEditable(false);

        jLabel2.setText("Apellidos:");

        resumenApe.setEditable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignaturas:"));

        asignaturasResumen.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(asignaturasResumen);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setText("DNI:");

        resumenDNI.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resumenNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                            .addComponent(resumenApe)
                            .addComponent(resumenDNI))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(resumenNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(resumenApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resumenDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Inicio", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignaturas"));

        jLabel7.setText("Asignatura:");

        comboBoxAsignaturas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" }));

        jLabel8.setText("Nota:");

        evaluacionAlumno.setText("Guardar nota");
        evaluacionAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluacionAlumnoActionPerformed(evt);
            }
        });

        jLabel16.setText("Convocatoria:");

        jTextPane1.setEditable(false);
        jTextPane1.setText("*Importante: Si deseas modificar la nota de una asignatura, selecciona la asignauta e introduce la convocatoria que quieras modificar. Después inserta la nueva nota");
        jScrollPane6.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxAsignaturas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(evaluacionAlumno))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gestionAlumnoNota, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gestionAlumnoConvo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboBoxAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gestionAlumnoNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(gestionAlumnoConvo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(evaluacionAlumno)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignaturas del Alumno:"));

        listaGestionNotas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaGestionNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaGestionNotasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaGestionNotas);

        jLabel17.setText("Asignatura:");

        jLabel18.setText("Convocatoria:");

        nombreAsig.setEditable(false);

        nombreConvo.setEditable(false);

        jLabel19.setText("Nota:");

        nombreNota.setEditable(false);

        eliminarNota.setText("Eliminar");
        eliminarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreAsig)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(nombreNota, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nombreConvo, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminarNota, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreAsig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreConvo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(eliminarNota)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Añadir Alumnos:"));

        jLabel11.setText("Nombre:");

        jLabel12.setText("Apellido:");

        jLabel13.setText("DNI:");

        addObjetoAlumno.setText("Crear Alumno");
        addObjetoAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObjetoAlumnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAlumnoNombre)
                    .addComponent(addAlumnoApe)
                    .addComponent(addAlumnoDNI))
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(addObjetoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addAlumnoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addAlumnoApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(addAlumnoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(addObjetoAlumno)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Alumnos:"));

        gestionApe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gestionApeFocusGained(evt);
            }
        });
        gestionApe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gestionApeActionPerformed(evt);
            }
        });
        gestionApe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gestionApeKeyPressed(evt);
            }
        });

        gestionDNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gestionDNIFocusGained(evt);
            }
        });
        gestionDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gestionDNIKeyPressed(evt);
            }
        });

        eliminarAlumno.setText("Eliminar");
        eliminarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarAlumnoActionPerformed(evt);
            }
        });

        listaGestionAlumnos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaGestionAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaGestionAlumnosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(listaGestionAlumnos);

        modAlumno.setText("Modificar");
        modAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modAlumnoActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre:");

        jLabel5.setText("Apellidos:");

        jLabel6.setText("DNI:");

        gestionNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gestionNombreFocusGained(evt);
            }
        });
        gestionNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gestionNombreActionPerformed(evt);
            }
        });
        gestionNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gestionNombreKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(eliminarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modAlumno))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gestionDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addComponent(gestionApe, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gestionNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gestionNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gestionApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gestionDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modAlumno)
                    .addComponent(eliminarAlumno))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Gestión Alumnos", jPanel4);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignaturas:"));

        listaGestionAsignaturas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaGestionAsignaturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaGestionAsignaturasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listaGestionAsignaturas);

        jLabel14.setText("Nombre del curso:");

        jLabel15.setText("Nombre de asignatura:");

        gestionAsig.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gestionAsigKeyPressed(evt);
            }
        });

        gestionCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gestionCursoKeyPressed(evt);
            }
        });

        eliminarAsignatura.setText("Eliminar");
        eliminarAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarAsignaturaActionPerformed(evt);
            }
        });

        modAsignatura.setText("Modificar");
        modAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modAsignaturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(eliminarAsignatura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addComponent(modAsignatura))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gestionAsig, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(gestionCurso))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gestionCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(gestionAsig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarAsignatura)
                    .addComponent(modAsignatura))
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Añadir Asignaturas:"));

        AddObjectoAsig.setText("Añadir");
        AddObjectoAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddObjectoAsigActionPerformed(evt);
            }
        });

        jLabel10.setText("Curso:");

        jLabel9.setText("Nombre de asignatura:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AddObjectoAsig))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cursoAsignatura, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(nomAsignatura))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cursoAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AddObjectoAsig)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Gestión Asignaturas", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAlumnosMouseClicked
        // TODO add your handling code here:
        // Es la lista del Inicio:   
        int indiceAlumno = listaAlumnos.getSelectedIndex(); // Selecciono el indice del alumno seleccionado
        ArrayList <Alumno> estudiantes =  new ArrayList(); // Monto mi arrayList para los alumnos
            try {
                estudiantes = gestion.cargarArchivoAlumnos(); // Cargo los alumnos
                Alumno alumno = estudiantes.get(indiceAlumno);  // Selecciono el alumno en base al indice que tiene en la lista, aprovechando que en la lista se muestran en el mismo orden que en el archivo
                
                // Asigno la información a los campos necesarios:
                resumenNombre.setText(alumno.getNombre());
                resumenApe.setText(alumno.getApellido());
                resumenDNI.setText(alumno.getDNI());
                
                asignaturasResumen.setModel(gestion.mostrarListaNotas(alumno));
                
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_listaAlumnosMouseClicked

    private void AddObjectoAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddObjectoAsigActionPerformed
        // TODO add your handling code here:
        String stringAsignatura = nomAsignatura.getText(); // Recojo el nombre
        String stringCurso = cursoAsignatura.getText(); // Recojo el curso
        

            try {
            if("".equals(stringCurso) || "".equals(stringAsignatura)){ // Si el DNI está vacío....
                throw new IOException();
            }else{ // En caso de que no....
                nomAsignatura.setText("");
                cursoAsignatura.setText("");
                gestion.insertarAsignatura(new Asignatura(stringAsignatura, stringCurso)); // Creo el alumno y lo inserto
                listaGestionAsignaturas.setModel(gestion.mostrarListaAsignatura()); // Actualizo la lista de Asignaturas en la ventana Gestion Asignaturas
                
                // Actualizo el combobox con las Asignaturas disponibles
                comboBoxAsignaturas.setModel(gestion.leerAsignatura());

            }
            } catch (Exception e) {
                System.out.println("Debes rellenar los dos campos"); // Indicamos al usuario el porqué de la excepción
            }
    }//GEN-LAST:event_AddObjectoAsigActionPerformed

    private void addObjetoAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addObjetoAlumnoActionPerformed
        // TODO add your handling code here:
        String nombre = addAlumnoNombre.getText(); // Recojo el nombre del nuevo alumno
        String apellido = addAlumnoApe.getText(); // Recojo el apellido del nuevo alumno
        String dni = addAlumnoDNI.getText(); // Recojo el DNI del nuevo alumno
        try{
            if("".equals(dni)){ // Si el DNI está vacío....
                throw new IOException();
            }else{ // En caso de que no....
                gestion.insertarAlumno(new Alumno(nombre, apellido, dni)); // Creo el alumno y lo inserto
                listaAlumnos.setModel(gestion.mostrarListaAlumnos()); // Actualizo la lista de alumnos en la ventana Gestion Alumnos
                listaGestionAlumnos.setModel(gestion.mostrarListaAlumnos()); // Actualizo la lista de alumnos en la ventana Inicio
            }
        }catch(IOException e){
            System.out.println("Debes rellenar como minimo el DNI"); // Indicamos al usuario el porqué de la excepción
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Seteamos todos los campos a "vacío"
        addAlumnoNombre.setText("");
        addAlumnoApe.setText("");
        addAlumnoDNI.setText("");
        
    }//GEN-LAST:event_addObjetoAlumnoActionPerformed

    private void listaGestionAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaGestionAlumnosMouseClicked
        // TODO add your handling code here:
        eliminarAlumno.setEnabled(true); // Una vez que se seleccione el Alumno, permitimos la opcion de eliminarlo
        evaluacionAlumno.setEnabled(true); // Permitimos al usuario guardar notas del Alumno;
        comboBoxAsignaturas.setEnabled(true); // Permitimos seleccionar Asignatura
        evaluacionAlumno.setEnabled(true); // Permitimos guardar nota
        eliminarNota.setEnabled(false); // Se ha cambiado el alumno y por lo tanto necesitamos seleccionar la nota otra vez
        
        int indiceAlumno = listaGestionAlumnos.getSelectedIndex(); // Selecciono el indice del alumno seleccionado
        ArrayList <Alumno> estudiantes =  new ArrayList(); // Monto mi arrayList para los alumnos
            try {
                estudiantes = gestion.cargarArchivoAlumnos(); // Cargo los alumnos
                Alumno alumno = estudiantes.get(indiceAlumno);  // Selecciono el alumno en base al indice que tiene en la lista, aprovechando que en la lista se muestran en el mismo orden que en el archivo
                System.err.println("Alumno: --->>"+ alumno.getNotas());
                // Asigno la información a los campos necesarios:
                gestionNombre.setText(alumno.getNombre());
                gestionApe.setText(alumno.getApellido());
                gestionDNI.setText(alumno.getDNI());
                
                listaGestionNotas.setModel(gestion.mostrarListaNotas(alumno));
                
                nombreAsig.setText("");
                nombreConvo.setText("");
                nombreNota.setText("");
                
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_listaGestionAlumnosMouseClicked

    private void eliminarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarAlumnoActionPerformed
        // TODO add your handling code here:
        evaluacionAlumno.setEnabled(false); // Impedimos guardar una nota de un alumno que no existe
        eliminarAlumno.setEnabled(false); // Bloqueamos el boton al usuario para que no pueda eliminar 2 veces al mismo alumno
        comboBoxAsignaturas.setEnabled(false); // Impedimos que el usuario pueda seleccionar asignatura sin seleccionar un usuario
        String nombre = gestionNombre.getText(); // Obtenemos el nombre del Alumno a borrar
        String apellido = gestionApe.getText(); // Obtenemos el apellido del Alumno a borrar
        String dni = gestionDNI.getText(); // Obtenemos el DNI del Alumno a borrar
        Alumno borrarAlumno = new Alumno(nombre, apellido, dni); // Creamos el alumno que deseamos borrar

        // Seteamos los campos de Gestion de Alumnos para indicar al usuario que se ha comenzado la operacion
        gestionNombre.setText("");
        gestionApe.setText("");
        gestionDNI.setText("");
        
        // Seteamos los campos de Inicio para que el usuario no vea datos residuales en los campos de texto
        resumenNombre.setText("");
        resumenApe.setText("");
        resumenDNI.setText("");
        
        // Poner en blanco la listaResumen de asignaturas
        DefaultListModel modelo = new DefaultListModel();
        modelo.addElement("");
        listaGestionNotas.setModel(modelo);
        
        nombreAsig.setText("");
        nombreConvo.setText("");
        nombreNota.setText("");

        try { 
            gestion.eliminarAlumno(borrarAlumno);// Intentamos eliminar el Alumno
            listaAlumnos.setModel(gestion.mostrarListaAlumnos()); // Actualizamos la lista de alumnos de Inicio
            listaGestionAlumnos.setModel(gestion.mostrarListaAlumnos()); // Actualizamos la lista de alumnos de Gestion de Alumnos

        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eliminarAlumnoActionPerformed

    private void gestionNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gestionNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gestionNombreActionPerformed

    private void gestionApeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gestionApeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gestionApeActionPerformed

    private void gestionNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gestionNombreFocusGained
        // TODO add your handling code here:     
    }//GEN-LAST:event_gestionNombreFocusGained

    private void gestionApeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gestionApeFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_gestionApeFocusGained

    private void gestionDNIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gestionDNIFocusGained
        // TODO add your handling code 
    }//GEN-LAST:event_gestionDNIFocusGained

    private void gestionNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gestionNombreKeyPressed
        // TODO add your handling code here:
        if(listaGestionAlumnos.getSelectedIndex() != -1){ // Si no se ha seleccionado ningun alumno...
            modAlumno.setEnabled(true);
        }
        eliminarAlumno.setEnabled(false);
    }//GEN-LAST:event_gestionNombreKeyPressed

    private void gestionDNIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gestionDNIKeyPressed
        // TODO add your handling code here:
        if(listaGestionAlumnos.getSelectedIndex() != -1){ // Si no se ha seleccionado ningun alumno...
            modAlumno.setEnabled(true);
        }
        eliminarAlumno.setEnabled(false);
    }//GEN-LAST:event_gestionDNIKeyPressed

    private void gestionApeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gestionApeKeyPressed
        // TODO add your handling code here:
        if(listaGestionAlumnos.getSelectedIndex() != -1){ // Si no se ha seleccionado ningun alumno...
            modAlumno.setEnabled(true);
        }
        eliminarAlumno.setEnabled(false);
    }//GEN-LAST:event_gestionApeKeyPressed

    private void modAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modAlumnoActionPerformed
        // TODO add your handling code here:
        modAlumno.setEnabled(false);
//        eliminarAlumno.setEnabled(true);
        int indiceAlumno = listaGestionAlumnos.getSelectedIndex(); // Selecciono el indice del alumno seleccionado
        ArrayList <Alumno> estudiantes =  new ArrayList(); // Monto mi arrayList para los alumnos
        
        try {
                estudiantes = gestion.cargarArchivoAlumnos(); // Cargo los alumnos
                Alumno alumno = estudiantes.get(indiceAlumno);  // Selecciono el alumno en base al indice que tiene en la lista, aprovechando que en la lista se muestran en el mismo orden que en el archivo
                
                // Recojo los datos modificados del alumno:
                String nombreMod = gestionNombre.getText();
                String apeMod = gestionApe.getText();
                String dniMod = gestionDNI.getText();
                
                //Limpiamos los campos:
                gestionNombre.setText("");
                gestionApe.setText("");
                gestionDNI.setText("");
                
                gestion.modAlumno(alumno, nombreMod, apeMod, dniMod);
                listaAlumnos.setModel(gestion.mostrarListaAlumnos());
                listaGestionAlumnos.setModel(gestion.mostrarListaAlumnos());
                
                
                
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_modAlumnoActionPerformed

    private void listaGestionAsignaturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaGestionAsignaturasMouseClicked
        // TODO add your handling code here:
        modAsignatura.setEnabled(false); // Aún no se han introducido datos para modificar
        eliminarAsignatura.setEnabled(true); // Se ha seleccionado una asignatura, por lo que permitimos su eliminación
        
        int indiceAsignatura = listaGestionAsignaturas.getSelectedIndex(); // Selecciono el indice del alumno seleccionado
        ArrayList <Asignatura> asignaturas =  new ArrayList(); // Monto mi arrayList para las asignaturas
            try {
                asignaturas = gestion.cargarArchivoAsignatura(); // Cargo las asignaturas
                Asignatura asignatura = asignaturas.get(indiceAsignatura);  // Selecciono las asignatura en base al indice que tiene en la lista, aprovechando que en la lista se muestran en el mismo orden que en el archivo
                
                // Asigno la información a los campos necesarios:
                gestionCurso.setText(asignatura.getCurso());
                gestionAsig.setText(asignatura.getAsig());
                
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_listaGestionAsignaturasMouseClicked

    private void eliminarAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarAsignaturaActionPerformed
        // TODO add your handling code here:
        eliminarAsignatura.setEnabled(false); // Bloqueamos el boton al usuario para que no pueda eliminar 2 veces la misma asignatura
        String curso = gestionCurso.getText(); // Obtenemos el curso de Asignatura a borrar
        String asignatura = gestionAsig.getText(); // Obtenemos el nombre de Asignatura a borrar
        Asignatura borrarAsignatura = new Asignatura(asignatura, curso); // Creamos la asignatura que deseamos borrar

        // Seteamos los campos de Gestion de Asignatura para indicar al usuario que se ha comenzado la operacion
        gestionCurso.setText("");
        gestionAsig.setText("");

        try { 
            gestion.eliminarAsignatura(borrarAsignatura);// Intentamos eliminar la Asignatura
            listaGestionAsignaturas.setModel(gestion.mostrarListaAsignatura()); // Actualizamos la lista de alumnos de Gestion Asignatura
            
            // Actualizo el combobox con las Asignaturas disponibles
            comboBoxAsignaturas.setModel(gestion.leerAsignatura());


        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_eliminarAsignaturaActionPerformed

    private void gestionCursoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gestionCursoKeyPressed
        // TODO add your handling code here:
        if(listaGestionAsignaturas.getSelectedIndex() != -1){ // Si no se ha seleccionado ninguna asignatura...
            modAsignatura.setEnabled(true);
        }
        eliminarAsignatura.setEnabled(false);
    }//GEN-LAST:event_gestionCursoKeyPressed

    private void gestionAsigKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gestionAsigKeyPressed
        // TODO add your handling code here:
        if(listaGestionAsignaturas.getSelectedIndex() != -1){ // Si no se ha seleccionado ninguna asignatura...
            modAsignatura.setEnabled(true);
        }
        eliminarAsignatura.setEnabled(false);
    }//GEN-LAST:event_gestionAsigKeyPressed

    private void modAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modAsignaturaActionPerformed
        // TODO add your handling code here:
        modAsignatura.setEnabled(false);
        
        int indiceAsignatura = listaGestionAsignaturas.getSelectedIndex(); // Selecciono el indice de la asignatura seleccionada
        ArrayList <Asignatura> asignaturas =  new ArrayList(); // Monto mi arrayList para las asignaturas
        
        try {
                asignaturas = gestion.cargarArchivoAsignatura(); // Cargo las asignaturas
                Asignatura asignatura = asignaturas.get(indiceAsignatura);  // Selecciono la asignatura en base al indice que tiene en la lista, aprovechando que en la lista se muestran en el mismo orden que en el archivo
                
                // Recojo los datos modificados del alumno:
                String cursoMod = gestionCurso.getText();
                String asigMod = gestionAsig.getText();
                
                // Limpiamos los campos:
                gestionCurso.setText("");
                gestionAsig.setText("");

                gestion.modAsignatura(asignatura, asigMod, cursoMod);
                listaGestionAsignaturas.setModel(gestion.mostrarListaAsignatura());      
                
                // Actualizo el combobox con las Asignaturas disponibles
                comboBoxAsignaturas.setModel(gestion.leerAsignatura());

                
                
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_modAsignaturaActionPerformed

    private void evaluacionAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluacionAlumnoActionPerformed
        // TODO add your handling code here:
        String asigCompleta = comboBoxAsignaturas.getSelectedItem().toString(); // Cojo el Item del ComboBox
        String[] asigLimpia = asigCompleta.split("\\("); // Partimos la cadena por el parentesis
        String asigClean = asigLimpia[0]; // Cogemos la primera parte que es el nombre de la asignatura   
        
        int indiceAlumno = listaGestionAlumnos.getSelectedIndex(); // Selecciono el indice del alumno seleccionado
        ArrayList <Alumno> estudiantes =  new ArrayList(); // Monto mi arrayList para los alumnos
        
        float n = Float.parseFloat(gestionAlumnoNota.getText());
        String convocatoria = gestionAlumnoConvo.getText();
        Asignatura asig;
            try {
                estudiantes = gestion.cargarArchivoAlumnos(); // Cargo los alumnos
                Alumno alumno = estudiantes.get(indiceAlumno);
                asig = gestion.obtenerAsignatura(asigClean);

                Nota nota = new Nota(asig, n, convocatoria);
                if(gestion.insertarNota(alumno, asig, nota)){
                    String nombreAsig = asig.getAsig()+" ("+nota.getConvocatoria()+")";
                    alumno.setNotas(nombreAsig, nota.getNota());
                    listaGestionNotas.setModel(gestion.mostrarListaNotas(alumno)); //  Muestra las asig y las notas

                }
                gestionAlumnoNota.setText("");
                gestionAlumnoConvo.setText("");

            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NumberFormatException e){
                System.out.println("Debes rellenar los campos NOTA y CONVOCATORIA");
            }


    }//GEN-LAST:event_evaluacionAlumnoActionPerformed

    private void listaGestionNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaGestionNotasMouseClicked
        // TODO add your handling code here:
        eliminarNota.setEnabled(true); // Permitimos que la nota sea modificada
        ArrayList <Alumno> estudiantes =  new ArrayList();
            try {
                estudiantes = gestion.cargarArchivoAlumnos(); // Cargo los alumnos
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        try {
            String notaCompleta = listaGestionNotas.getSelectedValue();        
            String[] notaPartida = notaCompleta.split("\\(");
            String[]  convocatoriaCompleta = notaPartida[1].split("\\) ==> ");
            String[] notaNumero = notaCompleta.split(" ==> ");
            String asignatura = notaPartida[0];
            String nota = notaNumero[1];
            String convocatoria = convocatoriaCompleta[0];

            nombreAsig.setText(asignatura);
            nombreConvo.setText(convocatoria);
            nombreNota.setText(nota);
            
        } catch (Exception e) {
            System.out.println("Debes introducir al menos una Nota");
            eliminarNota.setEnabled(false);
        }
    }//GEN-LAST:event_listaGestionNotasMouseClicked

    private void eliminarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarNotaActionPerformed
        // TODO add your handling code here:
        eliminarNota.setEnabled(false); // Bloqueamos la opcion de volver a eliminar si no se ha seccionado una asignatura
        ArrayList <Alumno> estudiantes =  new ArrayList();
        int indiceAlumno = listaGestionAlumnos.getSelectedIndex();
        try {
            estudiantes = gestion.cargarArchivoAlumnos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        Alumno alumno = estudiantes.get(indiceAlumno);
        
        String notaCompleta = listaGestionNotas.getSelectedValue();
        String[] nombreAsignatura = notaCompleta.split(" ==> ");
        String key = nombreAsignatura[0];
        
        nombreAsig.setText("");
        nombreConvo.setText("");
        nombreNota.setText("");
        
        try {
            gestion.eliminarNota(alumno, key);
            listaGestionNotas.setModel(gestion.mostrarListaNotas(alumno));
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_eliminarNotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Interfaz().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddObjectoAsig;
    private javax.swing.JTextField addAlumnoApe;
    private javax.swing.JTextField addAlumnoDNI;
    private javax.swing.JTextField addAlumnoNombre;
    private javax.swing.JButton addObjetoAlumno;
    private javax.swing.JList<String> asignaturasResumen;
    private javax.swing.JComboBox<String> comboBoxAsignaturas;
    private javax.swing.JTextField cursoAsignatura;
    private javax.swing.JButton eliminarAlumno;
    private javax.swing.JButton eliminarAsignatura;
    private javax.swing.JButton eliminarNota;
    private javax.swing.JButton evaluacionAlumno;
    private javax.swing.JTextField gestionAlumnoConvo;
    private javax.swing.JTextField gestionAlumnoNota;
    private javax.swing.JTextField gestionApe;
    private javax.swing.JTextField gestionAsig;
    private javax.swing.JTextField gestionCurso;
    private javax.swing.JTextField gestionDNI;
    private javax.swing.JTextField gestionNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JList<String> listaAlumnos;
    private javax.swing.JList<String> listaGestionAlumnos;
    private javax.swing.JList<String> listaGestionAsignaturas;
    private javax.swing.JList<String> listaGestionNotas;
    private javax.swing.JButton modAlumno;
    private javax.swing.JButton modAsignatura;
    private javax.swing.JTextField nomAsignatura;
    private javax.swing.JTextField nombreAsig;
    private javax.swing.JTextField nombreConvo;
    private javax.swing.JTextField nombreNota;
    private javax.swing.JTextField resumenApe;
    private javax.swing.JTextField resumenDNI;
    private javax.swing.JTextField resumenNombre;
    // End of variables declaration//GEN-END:variables
}
